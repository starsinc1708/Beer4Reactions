services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: beer4reactions-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-Beer4ReactionsDB}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-beer4reactions_password_2024}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-Beer4ReactionsDB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - beer4reactions-network

  # Beer4Reactions приложение
  beer4reactions:
    build:
      context: .
      dockerfile: Beer4Reactions.BotLogic/Dockerfile
    container_name: beer4reactions-app
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB:-Beer4ReactionsDB};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-beer4reactions_password_2024}
      - TelegramBot__ApiToken=${TELEGRAM_BOT_TOKEN}
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs
    networks:
      - beer4reactions-network


volumes:
  postgres_data:
    driver: local
    name: beer4reactions_postgres_data
  app_logs:
    driver: local
    name: beer4reactions_app_logs

networks:
  beer4reactions-network:
    driver: bridge
